name: product-app

services:
  app:
    build: .
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/productApp
      - SPRING_DATASOURCE_USERNAME=productApp
      - SPRING_DATASOURCE_PASSWORD=productApp
      - SPRING_LIQUIBASE_URL=jdbc:postgresql://postgresql:5432/productApp
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5000
    ports:
      - '8080:8080'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/management/health']
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      postgresql:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    networks:
      - product-network

  postgresql:
    image: postgres:17.4
    environment:
      - POSTGRES_DB=productApp
      - POSTGRES_USER=productApp
      - POSTGRES_PASSWORD=productApp
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U productApp']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - product-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - ES_JAVA_OPTS=-Xms256m -Xmx512m
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - '9200:9200'
      - '9300:9300'
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9200/_cluster/health']
      interval: 20s
      timeout: 10s
      retries: 10
    networks:
      - product-network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.4
    environment:
      - LS_JAVA_OPTS=-Xmx256m -Xms256m
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
    ports:
      - '5000:5000/tcp'
      - '5000:5000/udp'
      - '9600:9600'
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./src/main/docker/logstash/config/:/usr/share/logstash/config/
      - ./src/main/docker/logstash/pipeline/:/usr/share/logstash/pipeline/
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9600/_node/stats/pipeline']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - product-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - '5601:5601'
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - product-network

networks:
  product-network:
    driver: bridge

volumes:
  postgres_data:
  elasticsearch-data:
